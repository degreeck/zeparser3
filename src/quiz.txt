How do you put two newlines in a raw string with only one line-continuation?
Is `\u{}` valid?
Is there a max to the number of digits of a hex escape? And what about unicode escape?
How do you put two consecutive dots in valid JS without it being three?
What's the longest way to write a number that results in a zero without repeating any characters?
What's the biggest operator? (>>>=, or instanceof)
Can the new `\u{..}` unicode escape cause an error in comments?
How many distinct newline characters does JS acknowledge? (4: \r \n ls ps, or 5 with crlf)
Can comments cause an ASI?
Can you have backslashes in var names? (trick question: no)
Can you use the non breaking space (&nbsp; or 0xA0) as whitespace?
How do you generate an error with just a (single or double quoted) string?
Which of the single digit escapes are allowed in strings in sloppy mode? and in strict mode?
Create the empty regular expression (`//` would lead to a comment)
How do you get `//` in the source code without leading to a comment? And not part of a string/comment.
Are these regexes valid?  /a|/  /|a/  /|/
What's wrong here? `do foo while (bar);`
What punctuators could follow this code such that it could end up valid? `[a, {[b]: c}]` meh
Destructuring puzzles; valid? ({foo=bar})


function f(a,b){ b=5; console.log(arguments[1]); } f(); f(1); f(1,2); f(1, undefined); // implicit arguments bind

s=new Set(); s.add(NaN); s.add(NaN); log(s.size); // NaN == NaN


https://twitter.com/bmeurer/status/866339039200325632

aborting a custom iterator from for-of when that iterator refuses to abort
