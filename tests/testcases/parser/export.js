//import ZeTokenizer, {
let {
  $ASI,
  $EOF,
  $ERROR,
  $IDENT,
  $NUMBER,
  $NUMBER_HEX,
  $NUMBER_DEC,
  $NUMBER_BIN,
  $NUMBER_OCT,
  $NUMBER_OLD,
  $PUNCTUATOR,
  $REGEX,
  $REGEXU,
  $SPACE,
  $STRING,
  $STRING_DOUBLE,
  $STRING_SINGLE,
  $TAB,
  $TICK,
  $TICK_BODY,
  $TICK_HEAD,
  $TICK_PURE,
  $TICK_TAIL,
} = require('../../../src/zetokenizer');
//} from '../../../src/zetokenizer';

let tests = [
  'export',
  {
    code: 'export * from "foo"',
    ast: {type: 'Program', body: [
      {type: 'ExportAllDeclaration', source: {type: 'Literal', value: '<TODO>', raw: '"foo"'}},
    ]},
    desc: 're-export everything from another module (double string)',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $STRING_DOUBLE, $ASI],
  },
  {
    code: `export * from 'foo'`,
    ast: {type: 'Program', body: [
      {type: 'ExportAllDeclaration', source: {type: 'Literal', value: '<TODO>', raw: '\'foo\''}},
    ]},
    desc: 're-export everything from another module (single string)',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $STRING_SINGLE, $ASI],
  },
  {
    code: 'export {}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'empty export',
    tokens: [$IDENT, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'x'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export one key',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x as a}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'a'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export one key aliased',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x,}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'x'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export one key, trailing comma',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x} from "foo"',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'x'}},
        ],
        declaration: null,
        source: {type: 'Literal', value: '<TODO>', raw: '"foo"'},
      },
    ]},
    desc: 're-export one key',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $IDENT, $STRING_DOUBLE, $ASI],
  },
  {
    code: 'export {x as a} from "foo"',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'a'}},
        ],
        declaration: null,
        source: {type: 'Literal', value: '<TODO>', raw: '"foo"'},
      },
    ]},
    desc: 're-export one key aliased',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $IDENT, $STRING_DOUBLE, $ASI],
  },
  {
    code: 'export {x,} from "foo"',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'x'}},
        ],
        declaration: null,
        source: {type: 'Literal', value: '<TODO>', raw: '"foo"'},
      },
    ]},
    desc: 're-export one key, trailing comma',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $IDENT, $STRING_DOUBLE, $ASI],
  },
  {
    code: 'export {x as a,}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'a'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export one key aliased, trailing comma',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x, y}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'x'}},
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'y'}, exported: {type: 'Identifier', name: 'y'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export two keys',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x as a, y as b}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'a'}},
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'y'}, exported: {type: 'Identifier', name: 'b'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export two keys aliased',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x, y,}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'x'}},
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'y'}, exported: {type: 'Identifier', name: 'y'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export two keys, trailing comma',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export {x as a, y as b,}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'x'}, exported: {type: 'Identifier', name: 'a'}},
          {type: 'ExportSpecifier', local: {type: 'Identifier', name: 'y'}, exported: {type: 'Identifier', name: 'b'}},
        ],
        declaration: null,
        source: null,
      },
    ]},
    desc: 'export two keys aliased, trailing comma',
    tokens: [$IDENT, $PUNCTUATOR, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export var x',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: null},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export var statement, one var',
    tokens: [$IDENT, $IDENT, $IDENT, $ASI],
  },
  {
    code: 'export var x, y',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: null},
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'y'}, init: null},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export var statement, two vars',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $IDENT, $ASI],
  },
  {
    code: 'export var x = 10, y = 20',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'var',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: {type: 'Literal', value: '<TODO>', raw: '10'}},
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'y'}, init: {type: 'Literal', value: '<TODO>', raw: '20'}},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export var statement, two vars, with init',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $NUMBER_DEC, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $NUMBER_DEC, $ASI],
  },
  {
    code: 'export let x',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'let',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: null},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export let statement, one var',
    tokens: [$IDENT, $IDENT, $IDENT, $ASI],
  },
  {
    code: 'export let x, y',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'let',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: null},
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'y'}, init: null},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export let statement, two vars',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $IDENT, $ASI],
  },
  {
    code: 'export let x = 10, y = 20',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'let',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: {type: 'Literal', value: '<TODO>', raw: '10'}},
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'y'}, init: {type: 'Literal', value: '<TODO>', raw: '20'}},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export let statement, two vars, with init',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $NUMBER_DEC, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $NUMBER_DEC, $ASI],
  },
  {
    code: 'export const x',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'const',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: null},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export const statement, one var',
    tokens: [$IDENT, $IDENT, $IDENT, $ASI],
  },
  {
    code: 'export const x, y',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'const',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: null},
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'y'}, init: null},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export const statement, two vars',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $IDENT, $ASI],
  },
  {
    code: 'export const x = 10, y = 20',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'VariableDeclaration',
          kind: 'const',
          declarations: [
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'x'}, init: {type: 'Literal', value: '<TODO>', raw: '10'}},
            {type: 'VariableDeclarator', id: {type: 'Identifier', name: 'y'}, init: {type: 'Literal', value: '<TODO>', raw: '20'}},
          ],
        },
        source: null,
      },
    ]},
    desc: 'export const statement, two vars, with init',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $NUMBER_DEC, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $NUMBER_DEC, $ASI],
  },
  {
    code: 'export function f(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'FunctionDeclaration',
          generator: false,
          async: false,
          expression: false,
          id: {type: 'Identifier', name: 'f'},
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
        source: null,
      },
    ]},
    desc: 'export a named function',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export async function f(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'FunctionDeclaration',
          generator: false,
          async: true,
          expression: false,
          id: {type: 'Identifier', name: 'f'},
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
        source: null,
      },
    ]},
    desc: 'export a named async function',
    tokens: [$IDENT, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export function* f(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportNamedDeclaration',
        specifiers: [],
        declaration: {type: 'FunctionDeclaration',
          generator: true,
          async: false,
          expression: false,
          id: {type: 'Identifier', name: 'f'},
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
        source: null,
      },
    ]},
    desc: 'export a named generator function',
    tokens: [$IDENT, $IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export default function f(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportDefaultDeclaration',
        declaration: {type: 'FunctionDeclaration',
          generator: false,
          async: false,
          expression: false,
          id: {type: 'Identifier', name: 'f'},
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
      },
    ]},
    desc: 'default export a named function',
    tokens: [$IDENT, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export default async function f(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportDefaultDeclaration',
        declaration: {type: 'FunctionDeclaration',
          generator: false,
          async: true,
          expression: false,
          id: {type: 'Identifier', name: 'f'},
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
      },
    ]},
    desc: 'default export a named async function',
    tokens: [$IDENT, $IDENT, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export default function* f(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportDefaultDeclaration',
        declaration: {type: 'FunctionDeclaration',
          generator: true,
          async: false,
          expression: false,
          id: {type: 'Identifier', name: 'f'},
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
      },
    ]},
    desc: 'default export a named generator function',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export default function(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportDefaultDeclaration',
        declaration: {type: 'FunctionDeclaration',
          generator: false,
          async: false,
          expression: false,
          id: null,
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
      },
    ]},
    desc: 'default export an anonymous function',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export default async function(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportDefaultDeclaration',
        declaration: {type: 'FunctionDeclaration',
          generator: false,
          async: true,
          expression: false,
          id: null,
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
      },
    ]},
    desc: 'default export an anonymous async function',
    tokens: [$IDENT, $IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },
  {
    code: 'export default function*(){}',
    ast: {type: 'Program', body: [
      {type: 'ExportDefaultDeclaration',
        declaration: {type: 'FunctionDeclaration',
          generator: true,
          async: false,
          expression: false,
          id: null,
          params: [],
          body: {type: 'BlockStatement', body: []},
        },
      },
    ]},
    desc: 'default export an anonymous generator function',
    tokens: [$IDENT, $IDENT, $IDENT, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $PUNCTUATOR, $ASI],
  },


  // export class ...
  // export default class ...
];

//export default tests;
module.exports = tests;
